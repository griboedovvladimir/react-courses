{"version":3,"sources":["serviceWorker.js","services/store.service.js","components/BrandChoice/BrandChoice.js","components/Button/Button.js","data/data.js","components/ModelChoice/ModelChoice.js","components/FuelChoice/FuelChoice.js","components/TransmissionChoice/TransmissionChoice.js","components/Summary/Summary.js","components/Wizard/Wizard.js","index.js"],"names":["Boolean","window","location","hostname","match","instance","StoreService","Object","classCallCheck","this","choice","objectSpread","BrandChoice","_this","possibleConstructorReturn","getPrototypeOf","call","addToStore","e","brand","target","value","focusEvents","props","changeUndisabled","selectedBrand","getStore","options","keys","renderData","map","i","react_default","a","createElement","key","onFocus","id","htmlFor","defaultValue","onChange","name","Component","Button","onClick","clickCallback","disabled","type","destiny","data","Opel","Citroen","Ford","fuel","transmission","ModelChoice","model","selectedModel","FuelChoice","selectedFuel","TransmissionChoice","selectedTransmission","Summary","list","el","Wizard","doNextStep","setState","state","currentStep","doBackStep","undisableNextButton","modelChoiceData","activeStep","components_BrandChoice_BrandChoice","components_ModelChoice_ModelChoice","components_FuelChoice_FuelChoice","components_TransmissionChoice_TransmissionChoice","components_Summary_Summary","className","initStep","components_Button_Button","ReactDOM","render","components_Wizard_Wizard","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5069100.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let instance = null;\r\n\r\nexport default class StoreService {\r\n\r\n    constructor() {\r\n        if (!instance) {\r\n            instance = this;\r\n        }\r\n\r\n        return instance;\r\n    }\r\n\r\n    static choice = {};\r\n\r\n    static addToStore(choice) {\r\n        StoreService.choice = {...StoreService.choice, ...choice};\r\n    }\r\n\r\n    static getStore() {\r\n        return StoreService.choice;\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './BrandChoice.css';\r\nimport StoreService from '../../services/store.service'\r\n\r\n\r\nclass BrandChoice extends Component {\r\n    constructor() {\r\n        super();\r\n        this.selectedBrand = StoreService.getStore() ? StoreService.getStore().brand : null;\r\n    }\r\n\r\n    addToStore = (e) => {\r\n        StoreService.addToStore({brand: e.target.value});\r\n    };\r\n\r\n    focusEvents = (e) => {\r\n        this.addToStore(e);\r\n        this.props.changeUndisabled();\r\n    };\r\n\r\n    render() {\r\n        let options = Object.keys(this.props.renderData).map((brand, i) => <option key={i}>{brand}</option>);\r\n        return (\r\n            <form onFocus={this.focusEvents} id=\"form\">\r\n                <label htmlFor=\"brand\">Choice brand</label>\r\n                <select defaultValue={this.selectedBrand} onChange={this.addToStore} name=\"brand\" id=\"brand\">\r\n                    ${options}\r\n                </select>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BrandChoice;","import React, {Component} from 'react';\r\nimport './Button.css'\r\n\r\nclass Button extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <button onClick={this.props.clickCallback} disabled={this.props.disabled}\r\n                    type=\"button\">{this.props.destiny}</button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","export const data = {\r\n    brand: {\r\n        Opel: [\"Astra\", \"Vectra\", \"Zafira\"],\r\n        Citroen: [\"Xsara\", \"Xantia\", \"C5\", \"Berlingo\"],\r\n        Ford: [\"Focus\",\"Fiesta\"]\r\n    },\r\n    fuel:[\"Petrol\", \"Diesel\"],\r\n    transmission: [\"Automatic\", \"Manual\"]\r\n};","import React, { Component } from 'react';\r\nimport StoreService from \"../../services/store.service\";\r\n\r\nclass ModelChoice extends Component{\r\n    constructor(){\r\n        super();\r\n      this.selectedModel = StoreService.getStore() ? StoreService.getStore().model : null;\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(this.selectedModel){\r\n            this.props.changeUndisabled();\r\n        }\r\n    }\r\n\r\n    addToStore = (e) => {\r\n        StoreService.addToStore({model: e.target.value});\r\n    };\r\n\r\n    focusEvents = (e) => {\r\n        this.addToStore(e);\r\n        this.props.changeUndisabled();\r\n    };\r\n\r\n    render(){\r\n        let options = this.props.renderData.map((model, i) => <option key={i}>{model}</option>);\r\n        return (\r\n            <form onFocus={this.focusEvents} id=\"form\">\r\n                <label htmlFor=\"model\">Choice model</label>\r\n                <select defaultValue={this.selectedModel} onChange={this.addToStore} name=\"model\" id=\"model\">\r\n                    ${options}\r\n                </select>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default ModelChoice;","import React, {Component} from 'react';\r\nimport StoreService from \"../../services/store.service\";\r\n\r\nclass FuelChoice extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.selectedFuel = StoreService.getStore() ? StoreService.getStore().fuel : null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.selectedFuel) {\r\n            this.props.changeUndisabled();\r\n        }\r\n    }\r\n\r\n    addToStore = (e) => {\r\n        StoreService.addToStore({fuel: e.target.value});\r\n    };\r\n\r\n    focusEvents = (e) => {\r\n        this.addToStore(e);\r\n        this.props.changeUndisabled();\r\n    };\r\n\r\n    render() {\r\n        let options = this.props.renderData.map((fuel, i) => <option key={i}>{fuel}</option>);\r\n        return (\r\n            <form onFocus={this.focusEvents} id=\"form\">\r\n                <label htmlFor=\"fuel\">Choice fuel</label>\r\n                <select defaultValue={this.selectedFuel} onChange={this.addToStore} name=\"fuel\" id=\"fuel\">\r\n                    ${options}\r\n                </select>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FuelChoice;","import React, {Component} from 'react';\r\nimport StoreService from \"../../services/store.service\";\r\n\r\nclass TransmissionChoice extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.selectedTransmission = StoreService.getStore() ? StoreService.getStore().transmission : null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.selectedTransmission) {\r\n            this.props.changeUndisabled();\r\n        }\r\n    }\r\n\r\n    addToStore = (e) => {\r\n        StoreService.addToStore({transmission: e.target.value});\r\n    };\r\n\r\n    focusEvents = (e) => {\r\n        this.addToStore(e);\r\n        this.props.changeUndisabled();\r\n    };\r\n\r\n    render() {\r\n        let options = this.props.renderData.map((model, i) => <option key={i}>{model}</option>);\r\n        return (\r\n            <form onFocus={this.focusEvents} id=\"transmission\">\r\n                <label htmlFor=\"transmission\">Choice transmission</label>\r\n                <select defaultValue={this.selectedTransmission} onChange={this.addToStore} name=\"transmission\"\r\n                        id=\"transmission\">\r\n                    ${options}\r\n                </select>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TransmissionChoice;","import React, {Component} from 'react';\r\nimport StoreService from \"../../services/store.service\";\r\nimport './Summary.css';\r\n\r\n\r\nclass Summary extends Component {\r\n    render() {\r\n        let list = Object.keys(StoreService.getStore()).map((el, i) => <li\r\n            key={i}><span>{el}</span> : {StoreService.getStore()[el]}</li>);\r\n        return (\r\n            <div id=\"form\">\r\n                <h2>Your choice:</h2>\r\n                <ul>\r\n                    {list}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Summary;","import React, {Component} from 'react';\r\nimport './Wizard.css';\r\nimport BrandChoice from \"../BrandChoice\";\r\nimport Button from \"../Button\";\r\nimport {data} from \"../../data/data\";\r\nimport ModelChoice from \"../ModelChoice\";\r\nimport FuelChoice from \"../FuelChoice\";\r\nimport TransmissionChoice from \"../TransmissionChoice\";\r\nimport Summary from \"../Summary/Summary\";\r\nimport StoreService from '../../services/store.service'\r\n\r\n\r\nclass Wizard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.data = data;\r\n        this.modelChoiceData = '';\r\n        this.state = {\r\n            currentStep: 'brand',\r\n            disabled: true\r\n        }\r\n    }\r\n\r\n    doNextStep = () => {\r\n        this.setState({disabled: true});\r\n        if (this.state.currentStep === 'brand') {\r\n            this.setState({currentStep: 'model'});\r\n        } else if (this.state.currentStep === 'model') {\r\n            this.setState({currentStep: 'fuel'});\r\n        } else if (this.state.currentStep === 'fuel') {\r\n            this.setState({currentStep: 'transmission'});\r\n        } else if (this.state.currentStep === 'transmission') {\r\n            this.setState({currentStep: 'summary'});\r\n        }\r\n    };\r\n\r\n    doBackStep = () => {\r\n        this.setState({disabled: false});\r\n        if (this.state.currentStep === 'summary') {\r\n            this.setState({currentStep: 'transmission'});\r\n        } else if (this.state.currentStep === 'transmission') {\r\n            this.setState({currentStep: 'fuel'});\r\n        } else if (this.state.currentStep === 'fuel') {\r\n            this.setState({currentStep: 'model'});\r\n        } else if (this.state.currentStep === 'model') {\r\n            this.setState({currentStep: 'brand'});\r\n        }\r\n    };\r\n\r\n    initStep(name) {\r\n        let activeStep;\r\n        switch (name) {\r\n            case 'brand':\r\n                activeStep = <BrandChoice changeUndisabled={this.undisableNextButton} renderData={this.data.brand}/>;\r\n                break;\r\n            case 'model':\r\n                activeStep = <ModelChoice changeUndisabled={this.undisableNextButton}\r\n                                          renderData={this.data.brand[StoreService.getStore().brand]}/>;\r\n                break;\r\n            case 'fuel':\r\n                activeStep = <FuelChoice changeUndisabled={this.undisableNextButton} renderData={this.data.fuel}/>;\r\n                break;\r\n            case 'transmission':\r\n                activeStep = <TransmissionChoice changeUndisabled={this.undisableNextButton}\r\n                                                 renderData={this.data.transmission}/>;\r\n                break;\r\n            case 'summary':\r\n                activeStep = <Summary renderData={this.modelChoiceData}/>;\r\n                break;\r\n            default:\r\n                activeStep = null;\r\n        }\r\n        return activeStep;\r\n    }\r\n\r\n    undisableNextButton = () => {\r\n        this.setState({disabled: false});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wizard\">\r\n                {this.initStep(this.state.currentStep)}\r\n                <div className=\"buttons\">\r\n                    {this.state.currentStep !== 'brand' &&\r\n                    <Button disabled=\"\" clickCallback={this.doBackStep} destiny=\"Back\"/>}\r\n                    {this.state.currentStep !== 'summary' &&\r\n                    <Button disabled={this.state.disabled} clickCallback={this.doNextStep} destiny=\"Next\"/>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Wizard;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Wizard from \"./components/Wizard/Wizard\";\n\nReactDOM.render(<Wizard />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}